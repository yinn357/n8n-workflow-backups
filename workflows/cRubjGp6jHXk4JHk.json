{
  "active": false,
  "connections": {
    "TelegramÂ≠êËäÇÁÇπËß¶Âèë": {
      "main": [
        [
          {
            "node": "Êï∞ÊçÆÂ§ÑÁêÜ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Êï∞ÊçÆÂ§ÑÁêÜ": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit a text message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ÂèëÈÄÅ‰∏ÄÊù°Ê∂àÊÅØ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-04T01:45:43.326Z",
  "id": "cRubjGp6jHXk4JHk",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "sub-TelegramÈÄöÁü•",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "chatId"
            },
            {
              "name": "content"
            },
            {
              "name": "state"
            },
            {
              "name": "title"
            },
            {
              "name": "msgtype"
            },
            {
              "name": "messageId"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -288,
        -32
      ],
      "id": "70a88f5b-835d-496a-91dd-6c04726fb0a4",
      "name": "TelegramÂ≠êËäÇÁÇπËß¶Âèë"
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  const data = item.json;\n  // type\n  const msgtypeMap = { md: 'markdown' };\n  data.msgtype = msgtypeMap[data.msgtype] || data.msgtype;\n\n  // ÂêçÁß∞\n  let name = data.name || $workflow.name.replaceAll('sub-','');\n  // Áä∂ÊÄÅ\n  let state = data.state || 'üí¨';\n  switch (state) {\n    case 'Â§±Ë¥•':\n    case 'ÈîôËØØ':\n      state = state+'‚ùå';\n      break;\n    case 'ÊàêÂäü':\n    case 'ÂÆåÊàê':\n      state = state+'‚úÖ';\n      break;\n  }\n  \n  // Ê∂àÊÅØÂ§¥\n  const msgHeader  = `${name}: ${state} \\n\\n`\n  // ÂÜÖÂÆπ\n  data.content = msgHeader + data.content;\n  data.title = data.title || '';\n  return { json: data };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -64,
        -32
      ],
      "id": "0b15f0dd-0fbb-4ff5-b21a-b0e152025ae9",
      "name": "Êï∞ÊçÆÂ§ÑÁêÜ"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chatId }}",
        "text": "={{ $json.content }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        384,
        64
      ],
      "id": "b0d60e3d-4433-4ebe-9a83-6f6ef352a713",
      "name": "ÂèëÈÄÅ‰∏ÄÊù°Ê∂àÊÅØ",
      "webhookId": "fbe6792b-e7f2-4845-b9a2-3bf26462310f",
      "credentials": {
        "telegramApi": {
          "id": "HUakjpqref6diiOf",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.msgtype }}",
                    "rightValue": "edit",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "a691cae7-6f49-4a28-98aa-ab9ddc6bbc74"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cf25ef6a-4a48-4914-befc-fb1ba687bef2",
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        160,
        -32
      ],
      "id": "e3fe3901-3f5a-4ce0-a2a3-20f6daf89bc5",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $json.chatId }}",
        "messageId": "={{ $json.messageId }}",
        "text": "={{ $json.content }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        384,
        -128
      ],
      "id": "81ff2af4-ef2b-4571-94a0-48573a00f6e3",
      "name": "Edit a text message",
      "webhookId": "1eda162d-fad2-4d24-b53e-21312e42f781",
      "credentials": {
        "telegramApi": {
          "id": "HUakjpqref6diiOf",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-04T01:45:43.378Z",
      "updatedAt": "2025-09-04T01:45:43.378Z",
      "role": "workflow:owner",
      "workflowId": "cRubjGp6jHXk4JHk",
      "projectId": "BeX3bor8ts20lbDK"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-04T01:56:05.000Z",
  "versionId": "ce505089-6881-412d-a950-556b4f1efc59"
}